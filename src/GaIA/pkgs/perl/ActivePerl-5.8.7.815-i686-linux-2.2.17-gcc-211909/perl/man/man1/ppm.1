.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.3
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PPM 1"
.TH PPM 1 "2005-11-02" "perl v5.8.7" "User Contributed Perl Documentation"
.SH "NAME"
ppm3 \- Programmer's Package Manager, version 3.1
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
ppm3 [\-file=f] [\-shared] [\-target[=t]] [\-pause] [command [args]]
.PP
When run with no arguments, \s-1PPM3\s0 starts up an interactive shell where you can
enter commands. You may specify command-line arguments to run a single
command.
.PP
For example, the following two sessions are equivalent:
.PP
.Vb 4
\&   $ ppm
\&   ppm> search Tk
\&   [results displayed]
\&   ppm> exit
.Ve
.PP
.Vb 2
\&   $ ppm search Tk
\&   [results displayed]
.Ve
.PP
In the first case, \s-1PPM\s0 returns you to the prompt, where you can enter more
commands.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The program \fIppm3\fR is intended to simplify the tasks of locating, installing,
upgrading and removing Perl packages.
.PP
\&\fIppm3\fR runs in one of three modes: an interactive shell from which commands
may be entered; a script interpreter, reading sequential commands from a
file; and command-line mode, in which one specific action is performed per
invocation of the program.
.SH "COMMANDS"
.IX Header "COMMANDS"
The following sections describe each command available in \s-1PPM\s0. The following
help is also available via the online help feature by typing 'help' in \s-1PPM3\s0.
.SH "describe \*(-- Describe Packages"
.IX Header "describe  Describe Packages"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 8
\& des                Describes default/current package
\& des <number>       Describes package <number> in the
\&                    current search set
\& des <range>        Describes packages in the given 
\&                    <range> from the current search
\& des <package name> Describes named package
\& des <url>          Describes package located at <url>
\& des <glob pattern> Performes a new search using <glob pattern>
.Ve
.Sh "Description"
.IX Subsection "Description"
The describe command returns information about a package, including
the name of the package, the author's name and a brief description
(called an \*(L"Abstract\*(R") about the package. For example:
.PP
.Vb 1
\&    describe libnet
.Ve
.PP
returns:
.PP
.Vb 11
\&    ===============================
\&    Package 1
\&    Name: libnet
\&    Version: 1.07.03
\&    Author: Graham Barr
\&    Abstract: Collection of Network protocol modules
\&    Implementations:
\&            1.sun4-solaris-thread-multi
\&            2.i686-linux-thread-multi
\&            3.MSWIn32-x86-multi-thread
\&    ===============================
.Ve
.PP
There are two modifiers to the describe command:
.IP "\-ppd" 4
.IX Item "-ppd"
Displays the raw \s-1PPD\s0 of the package.
.IP "\-dump" 4
.IX Item "-dump"
The same as \-ppd.
.PP
When the describe command is called without arguments, it returns
information about the first package in the current search. If there is no
default search set, you will be prompted to use the search command
to find a package.
.PP
If describe is called with a numeric argument, that number is set as the
default package and the information about that package is returned. If the
number given doesn't exist, you will be prompted to use search to find a
package. Also, you can use describe to get descriptions of several
packages.  For example:
.PP
.Vb 1
\&    describe 4-7
.Ve
.PP
will return descriptions of packages 4 through 7 in the current search
request. You can also enter:
.PP
.Vb 1
\&    describe 3-4,10
.Ve
.PP
to get information on packages 3, 4 and 10.
.PP
If you specify a \s-1URL\s0 as the argument to describe, \s-1PPM\s0 will describe the
package located at the \s-1URL\s0. The \s-1URL\s0 must point to a \s-1PPD\s0 file. The \s-1URL\s0
can also point to a \s-1PPD\s0 file on your computer.
.PP
When the describe command is given a name with a wildcard (such as \*(L"*\*(R" or
\&\*(L"?\*(R") it executes the search command with the given argument. For example,
describe Tk* will return the name(s) of any packages that match the
search parameters.
.Sh "See Also"
.IX Subsection "See Also"
properties
.SH "exit, q, quit \*(-- Exit the program"
.IX Header "exit, q, quit  Exit the program"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 3
\& exit                Exit
\& q                   Exit
\& quit                Exit
.Ve
.Sh "Description"
.IX Subsection "Description"
When you leave the \s-1PPM\s0 environment, the current settings are saved.
.SH "help \*(-- General help, or help on specific commands."
.IX Header "help  General help, or help on specific commands."
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 2
\& help                Lists available commands and help topics
\& help <command>      Lists detailed help about a specific command
.Ve
.Sh "Description"
.IX Subsection "Description"
The help command provides a brief description of the commands available
within \s-1PPM\s0. For help on a specific command, enter help followed by the
command name. For example, enter help settings or help set for a detailed
description of the settings command.
.PP
There are some extra help topics built into \s-1PPM\s0. They can be accessed
within the \s-1PPM\s0 environment as follows:
.PP
.Vb 1
\&  help ppm_migration
.Ve
.PP
shows more details about the changes from previous versions of \s-1PPM\s0
.PP
.Vb 1
\&  help quickstart
.Ve
.PP
an easy-to-follow guide to getting started with \s-1PPM\s0
.PP
.Vb 1
\&  help prompt
.Ve
.PP
provides a detailed explanation about the \s-1PPM\s0 prompt
.SH "install \*(-- Install Packages"
.IX Header "install  Install Packages"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 5
\& install           Installs default package
\& install <number>  Installs packages by a specific <number>
\& install <range>   Installs packages in the given numeric <range>
\& install <name>    Installs named package
\& install <url>     Installs the package located at <url>
.Ve
.Sh "Description"
.IX Subsection "Description"
The install command is used to install packages from the repository.  Install
packages by name or number (the number is given by the repository or search
request), or set a default package using the describe command. You can specify
a full \s-1URL\s0 to a \s-1PPD\s0 file; the \s-1URL\s0 may point to a \s-1PPD\s0 file on your computer.
.PP
If you have profile tracking enabled, (see 'help profile') the current profile
will be updated to include the newly installed package(s).
.PP
The following modifiers can be used with the install command:
.IP "\(bu" 4
\&\-force
.IP "\(bu" 4
\&\-noforce
.IP "\(bu" 4
\&\-follow
.IP "\(bu" 4
\&\-nofollow
.PP
The force and follow switches determine how packages are installed:
.PP
.Vb 5
\& FORCE       FOLLOW          RESULT
\& false       false           Checks to see if the package is installed and
\&                             if it is, installation stops. If there are any
\&                             missing prerequisites, the installation will
\&                             fail.
.Ve
.PP
.Vb 5
\& false       true            Checks to see if the package is installed and
\&                             if it is, installation stops. If there are any
\&                             missing prerequisites, they are automatically
\&                             installed. NOTE: this is the default setting
\&                             when PPM is first installed.
.Ve
.PP
.Vb 4
\& true        false           If the package is installed, PPM will
\&                             reinstall the package. If there are any
\&                             missing prerequisites, the installation will
\&                             fail.
.Ve
.PP
.Vb 3
\& true        true            If the package is installed, PPM will
\&                             reinstall the package. All prerequisites are
\&                             installed, missing or not.
.Ve
.PP
If you do not specify any options, install uses the default settings. 
Set or view the current defaults using the 'settings' command.
.PP
For example:
.PP
.Vb 1
\&    install foo
.Ve
.PP
will install the package named \*(L"foo\*(R", using the default settings. 
Over-ride the defaults using the install modifiers described above.
.PP
For example:
.PP
.Vb 1
\&    install foo -force
.Ve
.PP
will install the \*(L"foo\*(R" package, even if it has already been installed. If
both \-force and \-follow are set to \*(L"true\*(R", all the prerequisites for any
package you install will also be installed. For example, the installation
of a tk-related package, like \*(L"tk\-ach\*(R" which is 8.4 kB will be preceded
by the installation of Tk, which is 1.7 \s-1MB\s0.
.PP
You can also install by package number. Package numbers are 
based on the current repository or current search request. For example:
.PP
.Vb 1
\&    install 6
.Ve
.PP
installs package number 6. You can install more than one package at one
time:
.PP
.Vb 1
\&    install 3-5
.Ve
.PP
installs packages 3, 4 and 5. You can also type install 3\-6,8 to install 
packages 3,4,5,6 and 8.
.Sh "See Also"
.IX Subsection "See Also"
profile
.SH "profile \*(-- Manage PPM Profiles"
.IX Header "profile  Manage PPM Profiles"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 11
\& profile                     Lists profiles available on the repository
\& profile <num>               Switches to the given profile
\& profile add <name>          Creates a new profile on the repository
\& profile delete <name or num>
\&                             Deletes the given profile
\& profile describe [name or num]
\&                             Describes the current or given profile
\& profile save                Saves the client state to the current profile
\& profile restore             Restores the current profile
\& profile rename <name or num> <name>
\&                             Renames the given profile to <name>
.Ve
.Sh "Description"
.IX Subsection "Description"
Profiles store information about packages that are installed on your
system. If the 'profile\-track' setting is enabled, your \s-1ASPN\s0 Profile will
be updated with information about installed packages. Profiles allow you
to easily migrate, reinstall, upgrade or restore \s-1PPM\s0 packages in one or
more locations.
.PP
To use profiles, you must have a license for \s-1ASPN\s0. For license
information, see http://www.ActiveState.com/ASPN/About 
Disable profile tracking by setting 'profile\-track=0'.
.SH "properties \*(-- Describe Installed Packages"
.IX Header "properties  Describe Installed Packages"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 6
\& prop                    Describes default installed package
\& prop <number>           Describes installed package <number>
\& prop <range>            Describes a <range> of installed packages
\& prop <package name>     Describes named installed package
\& prop <url>              Describes installed package located at <url>
\& prop <glob pattern>     Performs a new query using <glob pattern>
.Ve
.Sh "Description"
.IX Subsection "Description"
The properties command is an verbose form of the describe command. In
addition to summary information, properties will display
the installation date and a \s-1URL\s0 showing the location of the package
within the repository.
.PP
If you specify the package as a \s-1URL\s0, \s-1PPM\s0 determines the package name
from the \s-1URL\s0 and searches for that.
.PP
When the properties command is used with wildcard arguments,
the text entered at the \s-1PPM\s0 prompt is passed to the query command.
.PP
For example, typing 'properties libnet' will give you:
.PP
.Vb 9
\&    ====================
\&        Name: libnet
\&     Version: 1.07.03
\&      Author: Graham Barr
\&       Title: libnet
\&    Abstract: Collection of Network protocol modules
\&    InstDate: Fri Oct  2 16:15:15 1998
\&    Location: http://ppm.ActiveState.com/PPM/...
\&    ====================
.Ve
.Sh "See Also"
.IX Subsection "See Also"
describe
.SH "query \*(-- Query Installed Packages"
.IX Header "query  Query Installed Packages"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 4
\& query                   Displays list of previous queries
\& query <number>          Displays results of previous query
\& query <glob pattern>    Performs a new query using <glob pattern>
\& query *                 Displays a list of all installed packages
.Ve
.Sh "Description"
.IX Subsection "Description"
The query command displays a list of all installed packages, or a
list based on the <glob pattern> switch. You can also check
the list of past queries, or the results of a past query.
.PP
With \s-1PPM\s0 3.1, you can now perform much more powerful queries. The syntax
is identical to the 'search' command, and almost all the search switches
are also available for querying installed packages.
.PP
Recall previous queries with the 'query <number>' command. \s-1PPM3\s0
stores all queries from the current \s-1PPM\s0 session.
.PP
Note: Depending on the value of the \*(L"case\-sensitivity\*(R" setting,
the query may or may not be case\-sensitive. See \*(L"help settings\*(R" for
instructions on setting the default case sensitivity.
.Sh "See Also"
.IX Subsection "See Also"
search, settings
.SH "repository \*(-- Repository Control"
.IX Header "repository  Repository Control"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 12
\& rep                        Displays all repositories
\& rep add [name] <location>  Adds a new repository; makes it active
\& rep delete <name or num>   Deletes specified repository
\& rep describe <name or num> Displays information about the specified
\&                            repository
\& rep rename <name or num> <name>
\&                            Renames the specified repository to
\&                            the given name
\& rep on <name>              Activates the specified repository
\& rep off <name or num>      Removes the repository from the active list
\& rep up <name or num>       Moves the specified repository up one
\& rep down <name or num>     Moves the specified repository down one
.Ve
.PP
The <name> needs to be put inside doublequotes if it contains any spaces.
.Sh "Description"
.IX Subsection "Description"
The \fIrepository\fR (or \fIrep\fR) command controls two lists or repositories:
.IP "1" 4
.IX Item "1"
The list of \*(L"active\*(R" repositories. This is the list of repositories used by
\&\fIsearch\fR, \fIinstall\fR, and \fIupgrade\fR.
.IP "2" 4
.IX Item "2"
The list of all known repositories. You can designate a repository \*(L"inactive\*(R",
which means \s-1PPM\s0 will not use it in any commands.
.PP
If no arguments are given, the rep command will list the active
repositories defined in the \s-1PPM\s0 settings. The order is significant: when
installing a package, \s-1PPM\s0 will try the first repository, then the
second, and so on, until it find the package you asked for. When
searching, \s-1PPM\s0 merges the results of all the repositories together, so the
order is less important (see the \fIsearch\fR command).
.PP
For example, when you enter:
.PP
.Vb 1
\&    rep
.Ve
.PP
\&\s-1PPM3\s0 will return something resembling this:
.PP
.Vb 4
\&    Repositories:
\&    [1] ActiveCD
\&    [2] ActiveState Package Repository
\&    [ ] An inactive repository
.Ve
.PP
In the example above, entering 'rep off 2' will disable the second repository
(the ActiveStat Package Repository). To add another repository:
.PP
.Vb 1
\&    rep add [options] <NAME> <LOCATION>
.Ve
.PP
The following options are available for the 'add' command:
.IP "\(bu" 4
\&\-username 
.IP "\(bu" 4
\&\-password
.PP
These options allow you to specify a username and password to be used
when logging into a repository. Currently, these are only used for \s-1FTP\s0
and \s-1WWW\s0 repositories.
.PP
For example:
.PP
.Vb 1
\&    rep add "EZE" http://foo.com/MyPPMPackages
.Ve
.PP
with \*(L"\s-1EZE\s0\*(R" being the name of the repository (for easy reference)
and the location noted by the http location. If you were to enter the
rep command again, you would see:
.PP
.Vb 6
\&    ppm> rep
\&    Repositories:
\&    [1] ActiveCD
\&    [2] ActiveState Package Repository
\&    [3] EZE
\&    [ ] An inactive repository
.Ve
.PP
To move the new repository to the top of the Active list, you would type:
.PP
.Vb 12
\&    ppm> rep up EZE
\&    Repositories:
\&    [1] ActiveCD
\&    [2] EZE
\&    [3] ActiveState Package Repository
\&    [ ] An inactive repository
\&    ppm> rep up EZE
\&    Repositories:
\&    [1] EZE
\&    [2] ActiveCD
\&    [3] ActiveState Package Repository
\&    [ ] An inactive repository
.Ve
.PP
To disable the ActiveCD repository temporarily, enter the following:
.PP
.Vb 6
\&    ppm> rep off ActiveCD
\&    Repositories:
\&    [1] EZE
\&    [2] ActiveState Package Repository
\&    [ ] ActiveCD
\&    [ ] An inactive repository
.Ve
.PP
To describe a repository, refer to it either by name, or by the number
displayed next to the repository in the Active Repositories list. You must
refer to inactive repositories by their full name.
.PP
.Vb 10
\&    ppm> rep describe 2
\&    Describing Active Repository 2:
\&        Name: ActiveState Package Repository
\&    Location: http://ppm.ActiveState.com/cgibin/PPM/...
\&        Type: PPMServer 2.00
\&    ppm> rep describe ActiveCD
\&    Describing Inactive Repository:
\&        Name: ActiveCD
\&    Location: F:\ePPMPackages\e5.8plus
\&        Type: Local Directory
.Ve
.PP
To re-activate the ActiveCD repository, use the \fIrep on\fR command. You
must refer to inactive repositories by name, not number.
.PP
.Vb 6
\&    ppm> rep on ActiveCD
\&    Active Repositories:
\&    [1] EZE
\&    [2] ActiveState Package Repository
\&    [3] ActiveCD
\&    [ ] An inactive repository
.Ve
.Sh "Repository Types"
.IX Subsection "Repository Types"
\&\s-1PPM3\s0 supports several types of package repositories:
.IP "1." 4
\&\s-1PPM\s0 Server 3
.Sp
ActiveState's SOAP-driven package server. Because all searches are
done server\-side, the server can deliver much richer information about
packages than other repositories.
.IP "2." 4
\&\s-1PPM\s0 Server 2
.Sp
The \s-1SOAP\s0 server designed for \s-1PPM\s0 version 2. \s-1PPM\s0 3.1 ships with the
\&\s-1PPM2\s0 repository as well as the \s-1PPM3\s0 repository, so you can use
either. Simple searches are performed server\-side. If your search is
too complicated for the server, \s-1PPM\s0 3.1 will download the package
summary and search by itself.
.IP "3." 4
Web Repositories
.Sp
Older versions of \s-1PPM\s0 used non-SOAP repositories (directories full of
\&\s-1PPD\s0 files accessible using a web browser). Over the history of \s-1PPM\s0,
there have been several different ways of organising the files so that
\&\s-1PPM\s0 can search for packages properly. \s-1PPM3\s0 tries to download a summary
file first \*(-- if that fails, it gets the directory index. It parses the
summary or the index, and caches it. Searches are done from the
cache.
.IP "4." 4
\&\s-1FTP\s0 Repositories
.Sp
\&\s-1FTP\s0 is another way of exposing a directory full of \s-1PPD\s0 files. \s-1PPM3\s0
consideres \s-1FTP\s0 repositories a subset of Web repositories. Treat them as
identical: \s-1PPM3\s0 downloads the summary or the \*(L"index\*(R" (file listing in
this case), parses it, and then searches from it.
.IP "5." 4
Local Repositories
.Sp
To support installing packages from the ActiveCD, a local directory can
be a repository. \s-1PPM\s0 searches the files in the directory. All valid
path formats are supported, including \s-1UNC\s0 paths.
.SH "search \*(-- Search for Packages"
.IX Header "search  Search for Packages"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 5
\& search                Displays list of previous searches
\& search <number>       Displays results of search <number>
\& search <glob pattern> Performs a new search
\& search <field>=<glob> Searches for all packages matching the field.
\& search *              Displays all packages in the current repository
.Ve
.PP
The available fields are '\s-1ABSTRACT\s0', '\s-1NAME\s0', '\s-1TITLE\s0', '\s-1AUTHOR\s0', and '\s-1VERSION\s0'.
\&'\s-1NAME\s0' is used when you do not specify a field.
.Sh "Description"
.IX Subsection "Description"
Use the search command to look through the repository for packages.
\&\s-1PPM\s0 version 3 provides powerful search functionality. For example:
.IP "1." 4
Search for '\s-1CGI\s0' anywhere in the name:
.Sp
.Vb 1
\&  search CGI
.Ve
.Sp
Example results:
.Sp
.Vb 3
\&  Apache-CGI
\&  CGI-Application
\&  CGI-ArgChecker
.Ve
.IP "2." 4
Search for '\s-1CGI\s0' at the beginning of the name:
.Sp
.Vb 1
\&  search CGI*
.Ve
.Sp
Example results:
.Sp
.Vb 2
\&  CGI-ArgChecker
\&  CGI-Application
.Ve
.IP "3." 4
Search for all modules authored by someone with 'smith' in their name or
email:
.Sp
.Vb 1
\&  search AUTHOR=smith
.Ve
.Sp
Example results:
.Sp
.Vb 2
\&  Apache-ProxyPass
\&  Business-ISBN
.Ve
.IP "4." 4
Search for 'compress' anywhere in the abstract:
.Sp
.Vb 1
\&  search ABSTRACT=compress
.Ve
.Sp
Example results:
.Sp
.Vb 2
\&  Apache-GzipChain
\&  IO-Zlib
.Ve
.IP "5." 4
Search for '\s-1CGI\s0' in the name, or 'web' in the abstract:
.Sp
.Vb 1
\&  search CGI or ABSTRACT=web
.Ve
.Sp
Example results:
.Sp
.Vb 2
\&  CGI-XMLForm
\&  HTML-Clean
.Ve
.IP "6." 4
Search for '\s-1XML\s0' in the name and either 'parser' in the name or 'pars' in the
abstract, but not with 'XPath' in the name:
.Sp
.Vb 1
\&  search XML and (parser or ABSTRACT=pars) and not XPath
.Ve
.Sp
Example results:
.Sp
.Vb 2
\&  XML-Node
\&  XML-Parser-EasyTree
.Ve
.IP "7." 4
\&\s-1PPM\s0 Server 3 repositories only: search by module name, even if unrelated to
the containing package:
.Sp
.Vb 1
\&  search Data::Grove
.Ve
.Sp
Example results:
.Sp
.Vb 1
\&  libxml-perl
.Ve
.IP "8." 4
Browse all packages in the repository:
.Sp
.Vb 1
\&  search *
.Ve
.Sp
Example results:
.Sp
.Vb 3
\&  Affix-Infix2Postfix
\&  AI-Fuzzy
\&  [many more...]
.Ve
.PP
Recall previous searches using the 'search <number>' command. \s-1PPM\s0 stores
searches for each session until you exit \s-1PPM\s0.
.PP
Some package names or versions are too long to be displayed in the search
results. If a name is too long, you will see a '~' (tilde) as the last visible
character in the column. You can use \fIdescribe\fR to view detailed information
about such packages.
.Sh "Search Results"
.IX Subsection "Search Results"
When you type a command like \f(CW\*(C`search XML\*(C'\fR, \s-1PPM\s0 searches in each of the Active
Repositories (see the \fIrepository\fR command) for your package. The results are
merged into one list, and duplicates (packages found in more than one
repository) are hidden.
.PP
You can control what fields \s-1PPM\s0 shows for each package. The fields each have a
built-in weight, which is used to calculate how wide to make each field based
on the width of your screen. Information that doesn't fit into a field is
truncated, and a tilde (\f(CW\*(C`~\*(C'\fR) character is displayed in the last column of the
field.
.PP
Let's get down to an example:
.PP
.Vb 12
\&    ppm> search XML
\&    Searching in Active Repositories
\&        1. CGI-XMLForm           [0.10] Extension to CGI.pm which
\&        2. Data-DumpXML          [1.01] Dump arbitrary data structures
\&        3. DBIx-XML_RDB          [0.05] Perl extension for creating XML
\&        4. DBIx-XMLMessage       [0.03] XML Message exchange between DBI
\&        5. GoXML-XQI            [1.1.4] Perl extension for the XML Query
\&        6. Language-DATR-DATR2~ [0.901] manipulate DATR .dtr, XML, HTML,
\&        7. libxml-perl           [0.07] support for deeply nested
\&        8. Mail-FilterXML         [0.1] Undetermined
\&        9. Mail-XML              [0.03] Adds a toXML() method to
\&       10. Pod-XML               [0.93] Module to convert POD to XML
.Ve
.PP
As you can see, the three fields being displayed are:
.IP "1" 4
.IX Item "1"
\&\s-1NAME\s0
.Sp
The package name
.IP "2" 4
.IX Item "2"
\&\s-1VERSION\s0
.Sp
The package version
.IP "3" 4
.IX Item "3"
\&\s-1ABSTRACT\s0
.Sp
The package abstract
.PP
You can customize the view somewhat. If you want to view the authors, but not
the abstract, you can run the same \fIsearch\fR command after using \fIset\fR to
change the fields:
.PP
.Vb 14
\&    ppm> set fields="NAME VERSION AUTHOR"
\&    Setting 'fields' set to 'name version author'.
\&    ppm> search XML
\&    Using cached search result set 1.
\&        1. CGI-XMLForm         [0.10] Matt Sergeant (matt@sergeant.org)
\&        2. Data-DumpXML        [1.01] Gisle Aas (gisle@aas.no)
\&        3. DBIx-XML_RDB        [0.05] Matt Sergeant (matt@sergeant.org)
\&        4. DBIx-XMLMessage     [0.03] Andrei Nossov (andrein@andrein.com)
\&        5. GoXML-XQI          [1.1.4] Matthew MacKenzie (matt@goxml.com)
\&        6. Language-DATR-DAT~ [0.901] Lee Goddard (lgoddard@cpan.org)
\&        7. libxml-perl         [0.07] Ken MacLeod (ken@bitsko.slc.ut.us)
\&        8. Mail-FilterXML       [0.1] Matthew MacKenzie (matt@goxml.com)
\&        9. Mail-XML            [0.03] Matthew MacKenzie (matt@goxml.com)
\&       10. Pod-XML             [0.93] Matt Sergeant (matt@sergeant.org)
.Ve
.PP
You can change the order in which the results are sorted, and what columns are
displayed. The settings \fIfields\fR and \fIsort-field\fR changes this. You can
sort by any valid field name (even fields which are not displayed). See the
\&\fIsettings\fR command for the valid field names.
.PP
\&\s-1PPM\s0 always hides \*(L"duplicate\*(R" results. It decides whether a result is
duplicated based on the fields being displayed. If the same package is found
in more than one repository, but you don't have the \s-1REPOSITORY\s0 field showing,
\&\s-1PPM\s0 will only list the package once.
.SH "settings \*(-- View or Set PPM Settings"
.IX Header "settings  View or Set PPM Settings"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 5
\& set                 Displays current settings
\& set <name>          Displays the current setting of the given <name>
\& set <name> <value>  Sets <name> to <value>
\& unset <name>        Sets <name> to a "false" value: '0' for boolean
\&                     settings, '' for others.
.Ve
.Sh "Description"
.IX Subsection "Description"
The settings command is used to configure the default \s-1PPM\s0 environment.
Settings such as the number of lines displayed per page, case\-sensitivity,
and the log file are configured using the settings command.
.PP
Setting names may be abbreviated to uniqueness. For example, instead
of typing 'case\-sensitivity', you may type 'case'.
.PP
Available settings:
.PP
.Vb 3
\& NAME                VALUE           DESCRIPTION
\& case-sensitivity    1 or 0      If 1, searches and queries are
\&                                 case-sensitive.
.Ve
.PP
.Vb 5
\& download-chunksize  integer     If this is set to a positive,
\&                                 non-zero integer, PPM updates the
\&                                 status after "integer" of bytes
\&                                 transferred during an install or
\&                                 upgrade.
.Ve
.PP
.Vb 3
\& fields              fields      A space-separated list of fields to 
\&                                 display in the search results. Valid
\&                                 fields are:
.Ve
.PP
.Vb 6
\&                                   ABSTRACT
\&                                   AUTHOR
\&                                   NAME
\&                                   REPOSITORY
\&                                   TITLE
\&                                   VERSION
.Ve
.PP
.Vb 2
\&                                 Usually, NAME and TITLE have the same
\&                                 content.
.Ve
.PP
.Vb 1
\& follow-install      1 or 0      See 'help install' for details.
.Ve
.PP
.Vb 1
\& force-install       1 or 0      See 'help install' for details.
.Ve
.PP
.Vb 3
\& install-verbose     1 or 0      If 0, suppresses most output when
\&                                 installing packages. If 1, PPM prints
\&                                 each file as it is installed.
.Ve
.PP
.Vb 5
\& pager               path        The path to an external pager program
\&                                 used to page long displays. If blank,
\&                                 or set to 'internal', the internal
\&                                 pager is used. If 'none', paging
\&                                 is disabled.
.Ve
.PP
.Vb 7
\& profile-track       1 or 0      If 1, PPM arranges to have the 
\&                                 ASPN server track your PPM profile. 
\&                                 This means that every time your install
\&                                 or remove a package, your profile is
\&                                 updated on the server. If 0, you must
\&                                 manually save your profile using
\&                                 'profile save'.
.Ve
.PP
.Vb 3
\& prompt-context      1 or 0      If 1, enables the prompt to change
\&                                 based on the current state of PPM, i.e
\&                                 showing current target, query, etc.
.Ve
.PP
.Vb 4
\& prompt-slotsize     integer     If prompt-verbose is 1, this defines
\&                                 the width of each slot in the prompt.
\&                                 For instance, 4 means to use 4 
\&                                 character-wide slots.
.Ve
.PP
.Vb 5
\& prompt-verbose      1 or 0      If 0, uses numbers to represent the
\&                                 context in the prompt; much shorter.
\&                                 If prompt-context is set to 0, there
\&                                 will be no visible difference in the
\&                                 'prompt-verbose' settings.
.Ve
.PP
.Vb 6
\& rebuild-html        1 or 0      If 0, suppresses regeneration of HTML
\&                                 documentation when packages are
\&                                 installed. If 1, enables HTML to be
\&                                 generated from POD documentation.
\&                                 Enabling this option may slow down
\&                                 package installation.
.Ve
.PP
.Vb 3
\& remove-verbose      1 or 0      If 0, suppresses most output when
\&                                 removing packages. If 1, prints the
\&                                 name of each file as it is removed.
.Ve
.PP
.Vb 4
\& sort-field          field       The field by which to sort search and
\&                                 query results. Valid fields are
\&                                 ABSTRACT, AUTHOR, NAME, TITLE
\&                                 and VERSION.
.Ve
.PP
.Vb 3
\& tempdir             path        A temporary directory into which
\&                                 packages are downloaded and expanded
\&                                 during 'install' and 'upgrade'.
.Ve
.PP
.Vb 2
\& trace-file          path        A file to which PPM will write tracing
\&                                 information.
.Ve
.PP
.Vb 6
\& trace-level         integer     If 0 or negative, tracing is disabled.
\&                                 Positive, non-zero integers result in
\&                                 tracing information being written to
\&                                 'trace-file'. Higher settings of
\&                                 'trace-level' result in more trace
\&                                 information.
.Ve
.PP
.Vb 3
\& upgrade-verbose     1 or 0      If 0, suppresses most output when
\&                                 upgrading packages. If 1, prints the
\&                                 name of each file as it is upgraded.
.Ve
.PP
For information about migrating options used by previous
versions of \s-1PPM\s0, see 'help ppm_migration'.
.PP
When you assign a value to a setting, \s-1PPM\s0 saves the configuration.
Therefore, setting values persist across sessions.
.SH "targets \*(-- View Target Installer Backends"
.IX Header "targets  View Target Installer Backends"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 9
\& target                      Displays a list of backend targets
\& target <number>             Sets <number> as default backend target
\& target [select] <name or num>
\&                             Sets <name or num> as default backend target
\& target describe [name or num]
\&                             Describes the given (or default) target
\& target set <key> <val>      Sets the target's <key> to <val> 
\& target rename <name or num> <name>
\&                             Renames the given target to <name>
.Ve
.Sh "Description"
.IX Subsection "Description"
The target is the destination location of the install routine, such as 
the directory where the packages are installed when they're downloaded
from the repository. For example:
.PP
.Vb 1
\&    target
.Ve
.PP
returns:
.PP
.Vb 3
\&    Targets:
\&      1. ActivePerl 618
\&    * 2. ActivePerl 629
.Ve
.PP
This shows that there are two available targets, and that the second
target (ActivePerl 629) is currently the default (as shown by the
asterisk). Using multiple targets, you can manage multiple 
installations of Perl from a single command\-line.
.SH "tree \*(-- Show Dependency Tree for Packages"
.IX Header "tree  Show Dependency Tree for Packages"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 8
\& tree                Displays the dependency-tree of the current
\&                     or default package
\& tree <number>       Displays the dependency-tree of the given <number>
\& tree <range>        Displays a <range> of dependency-trees
\& tree <package name> Displays the dependency-tree of the named package
\& tree <url>          Displays the dependency-tree for the
\&                     package at <url>
\& tree <glob pattern> Performs a new search using <glob pattern>
.Ve
.Sh "Description"
.IX Subsection "Description"
The tree command is used to show the \*(L"dependency tree\*(R" of a given
package (additional packages that are required by the current package).
For example:
.PP
.Vb 1
\&    tree SOAP-lite
.Ve
.PP
returns:
.PP
.Vb 8
\&    ====================
\&    SOAP-Lite 0.51
\&    |__MIME-tools 5.316
\&    |   |__MailTools 1.15
\&    |   \e__IO-stringy 1.216
\&    |
\&    \e__MIME-Lite 2.105
\&    ====================
.Ve
.PP
SOAP-Lite requires four other packages.
.PP
When tree is called without a <name> or <number> switch, the command
will return the dependency tree of the first package in the default
search result. If there is no default search, you will be requested to
use search to find a package.
.SH "remove, uninstall \*(-- Uninstalls Installed Packages"
.IX Header "remove, uninstall  Uninstalls Installed Packages"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 5
\& remove              Deletes default installed package
\& remove <number>     Deletes installed package <number>
\& remove <range>      Deletes a <range> of installed packages
\& remove <name>       Deletes a packages by a specific name
\& remove <url>        Deletes the package located at <url>
.Ve
.Sh "Description"
.IX Subsection "Description"
The remove and uninstall commands function identically. They are used to
delete packages from the current target (specified using the target
command). If profile tracking is enabled, (see 'help profile') the
current \s-1PPM\s0 profile on \s-1ASPN\s0 will be updated.
.PP
Packages can be removed by package name, by their numerical listing, or 
by specifying a \s-1URL\s0 to a \s-1PPD\s0 file. For example:
.PP
.Vb 1
\&    remove XML-DOM
.Ve
.PP
will delete the XML-DOM package from the target.
.PP
To remove package by number:
.PP
.Vb 1
\&    remove 6
.Ve
.PP
and the sixth package in your current query will be removed. If no
queries have been run in the current \s-1PPM\s0 session, you will be prompted
to use a query to find a package before deleting it. Remember that removing
packages clears all previous query requests, since the numerical
sequence stored in any query will no longer be true once package(s) have
been removed.
.PP
Packages can also be removed in groups.  For example:
.PP
.Vb 1
\&    remove 4-7
.Ve
.PP
will delete packages 4, 5, 6, and 7 from your target. You can also skip
packages:
.PP
.Vb 1
\&    remove 3-5, 7
.Ve
.PP
this will delete packages 3, 4, 5 and 7, but will leave 6 intact.
Remember to run a new query whenever you remove a package from your
target.
.PP
If you specify the package as a \s-1URL\s0, \s-1PPM\s0 determines the package name from
the \s-1URL\s0 and removes that.
.PP
Please note that wildcards like \*(L"*\*(R" or \*(L"?\*(R" cannot be used with the remove
command.
.Sh "See Also"
.IX Subsection "See Also"
profile
.SH "upgrade \*(-- List or install available upgrades"
.IX Header "upgrade  List or install available upgrades"
.Sh "Synopsis"
.IX Subsection "Synopsis"
.Vb 4
\& upgrade [*]         Lists upgrades available for all installed packages
\& upgrade <number>    Lists upgrades for installed package <number>
\& upgrade <range>     Lists upgrades for a <range> of installed packages
\& upgrade <package>   Lists upgrades for the named <package>
.Ve
.Sh "Description"
.IX Subsection "Description"
The upgrade command lists package upgrades that are available on the
active repositories for packages installed on your system. To install
available upgrades, use the '\-\-install' option.
.PP
If profile tracking is enabled, (see 'help profile'), your profile
will be updated to reflect changes to any packages which are upgraded.
.PP
There are several modifiers to the upgrade command:
.IP "\-install" 4
.IX Item "-install"
Installs, rather than lists, available upgrades
.IP "\-precious" 4
.IX Item "-precious"
Allows upgrading of \*(L"precious\*(R" packages
.IP "\-force" 4
.IX Item "-force"
See 'help install'
.IP "\-follow" 4
.IX Item "-follow"
See 'help install'
.PP
By default, 'upgrade' typed by itself only lists the available upgrades.
To actually install all available upgrades, enter
.PP
.Vb 1
\&    upgrade -install
.Ve
.PP
To enable upgrading \*(L"precious\*(R" packages, enter
.PP
.Vb 1
\&    upgrade -install -precious
.Ve
.Sh "See Also"
.IX Subsection "See Also"
profile
.SH "version \*(-- print the name and version of PPM."
.IX Header "version  print the name and version of PPM."
Prints the name and version of \s-1PPM3\s0.
.SH "EXTRA HELP TOPICS"
.IX Header "EXTRA HELP TOPICS"
The following sections describe extra help topics available in \s-1PPM\s0. An extra
help topic is not the name of a command \*(-- it is only available as a help
page. The following help is available via the online help feature by typing
\&'help' in \s-1PPM3\s0.
.SH "ppm migration \*(-- PPM Migration Guide"
.IX Header "ppm migration  PPM Migration Guide"
.Sh "Description"
.IX Subsection "Description"
Those familiar with \s-1PPM\s0 version 2 should appreciate the extended
functionality  of \s-1PPM\s0 version 3, including the command-line history,
autocomplete and profiles. Some \s-1PPM\s0 version 2 commands are different
in \s-1PPM\s0 version 3. Examples of command changes include:
.IP "1" 4
.IX Item "1"
Adding a repository
.Sp
\&\s-1PPM2:\s0
.Sp
.Vb 1
\&  set repository my_repository http://my/repository
.Ve
.Sp
\&\s-1PPM3:\s0
.Sp
.Vb 1
\&  repository add my_repository http://my/repository
.Ve
.IP "2" 4
.IX Item "2"
Removing a repository
.Sp
\&\s-1PPM2:\s0
.Sp
.Vb 1
\&  set repository --remove my_repository
.Ve
.Sp
\&\s-1PPM3:\s0
.Sp
.Vb 1
\&  repository del my_repository
.Ve
.IP "3" 4
.IX Item "3"
Setting the temporary directory
.Sp
\&\s-1PPM2:\s0
.Sp
.Vb 1
\&  set build DIRECTORY
.Ve
.Sp
\&\s-1PPM3\s0
.Sp
.Vb 1
\&  set tempdir DIRECTORY
.Ve
.IP "4" 4
.IX Item "4"
Setting frequency of download updates
.Sp
\&\s-1PPM2:\s0
.Sp
.Vb 1
\&  set downloadstatus NUMBER
.Ve
.Sp
\&\s-1PPM3:\s0
.Sp
.Vb 1
\&  set download-chunksize NUMBER
.Ve
.IP "5" 4
.IX Item "5"
Changing the installation root directory:
.Sp
\&\s-1PPM2:\s0
.Sp
.Vb 1
\&  set root DIRECTORY
.Ve
.Sp
\&\s-1PPM3:\s0
.Sp
.Vb 1
\&  target set root DIRECTORY
.Ve
.IP "6" 4
.IX Item "6"
Listing all installed packages:
.Sp
\&\s-1PPM2:\s0
.Sp
.Vb 1
\&  query
.Ve
.Sp
\&\s-1PPM3:\s0
.Sp
.Vb 1
\&  query *
.Ve
.IP "7" 4
.IX Item "7"
Listing all packages on server:
.Sp
\&\s-1PPM2:\s0
.Sp
.Vb 1
\&  search
.Ve
.Sp
\&\s-1PPM3:\s0
.Sp
.Vb 1
\&  search *
.Ve
.IP "8" 4
.IX Item "8"
Enabling \s-1HTML\s0 documentation generation:
.Sp
\&\s-1PPM2:\s0
.Sp
.Vb 1
\&  set rebuildhtml 1
.Ve
.Sp
\&\s-1PPM3:\s0
.Sp
.Vb 1
\&  set rebuild-html 1
.Ve
.SH "prompt \*(-- information about the PPM3 prompt"
.IX Header "prompt  information about the PPM3 prompt"
.Sh "Description"
.IX Subsection "Description"
The \s-1PPM\s0 prompt can tell you six things:
.IP "1)" 4
The current repository;
.IP "2)" 4
The current target;
.IP "3)" 4
The last search you made on the current repository;
.IP "4)" 4
The last query you made on the current target;
.IP "5)" 4
The last package you described from this repository; and,
.IP "6)" 4
The last package you described from this target.
.PP
To enable the prompt to tell you this information, you must set
\&'prompt\-context' to '1'. The following examples all assume this setting.
.Sh "Examples"
.IX Subsection "Examples"
.IP "1" 4
.IX Item "1"
Repository and Target:
.Sp
Set 'prompt\-context' The prompt will resemble:
.Sp
.Vb 1
\&    ppm:1:1>
.Ve
.Sp
In this case, the first '1' means that the first repository is selected.
The second '1' means the first target is selected. You can prove this by
adding another repository and switching to it:
.Sp
.Vb 9
\&    ppm:1:1> rep add TEMP http://my/repository
\&    Repositories:
\&      1. ActiveState Package Repository
\&    * 2. TEMP
\&    ppm:1:1> rep 2
\&    Repositories:
\&      1. ActiveState Package Repository
\&    * 2. TEMP
\&    ppm:2:1>
.Ve
.Sp
The same is true for targets. If you have multiple versions of Perl
installed, when you swtich to a different target the second number
reflects the change.
.Sp
If you delete all the repositories, the repository number changes to '?'.
The same goes for targets. If either item is indicated by a question mark,
you must configure a repository or target before proceeding.
.IP "2" 4
.IX Item "2"
Search and Query:
.Sp
\&\s-1PPM\s0 stores searches and search results from in the current session.
The prompt displays the search number:
.Sp
.Vb 3
\&    ppm:1:1> search Text
\&    [results displayed here]
\&    ppm:1:1:s1>
.Ve
.Sp
The 's1' indicates that the last search you performed
can be viewed again by entering 'search 1'. Type 'search' with no
arguments to view the list of cached searches:
.Sp
.Vb 3
\&    ppm:1:1:s1> search
\&    Search Result Sets:
\&    * 1. Text
.Ve
.Sp
If you then enter 'search 1', you will see the same results as when you
typed 'search Text' earlier. If you search for something else ('search 
Parse') then the number will change to 's2':
.Sp
.Vb 3
\&    ppm:1:1:s1> search Parse
\&    [results displayed here]
\&    ppm:1:1:s2>
.Ve
.Sp
The same indicators apply to the query command. When you run a query,
a numerical indicator displays the current query:
.Sp
.Vb 3
\&    ppm:1:1:s1> query PPM
\&    [results displayed here]
\&    ppm:1:1:s1:q1>
.Ve
.Sp
You can view the past queries with 'query', and view results by querying a
particular number.
.IP "3" 4
.IX Item "3"
Describe and Properties:
.Sp
When you use the describe command with the numerical switch (to view
package information based on the package number in the last search or
query), \s-1PPM\s0 sets that index to the current index. If you use the desribe
command with the name switch, and the name is found within the current
result, the index is set to the current one. If no package is found,
\&\s-1PPM\s0 creates a new search or query on\-the\-fly, and sets it as the current
search or query.
.Sp
For example:
.Sp
.Vb 8
\&    ppm:1:1> search Text
\&    1. Convert-Context  [0.501]     an Attributed Text data type
\&    2. gettext          [1.01]      message handling functions
\&    3. HTML-FromText    [1.005]     mark up text as HTML
\&    4. HTML-Subtext     [1.03]      Perform text substitutions on an HTML
\&                                    template
\&    5. Locale-Maketext  [0.18]      framework for software localization
\&    ppm:1:1:s1>
.Ve
.Sp
.Vb 13
\&    ppm:1:1:s1> describe 1
\&    ====================
\&    Package 1:
\&        Name: Convert-Context
\&     Version: 0.501
\&      Author: Martin Schwartz (martin@nacho.de)
\&    Abstract: an Attributed Text data type
\&    Implementations:
\&           1. i686-linux-thread-multi
\&           2. MSWin32-x86-multi-thread
\&           3. sun4-solaris-thread-multi
\&    ====================
\&    ppm:1:1:s1:sp1>
.Ve
.Sp
The last prompt has an extra 'sp1'. That stands for 'search
package 1', and it means that \s-1PPM\s0 considers 'Convert\-Context' to be the
default package. If you now type 'describe' or 'install' with no
arguments, \s-1PPM\s0 will apply your command to this package.
.Sp
If you go back to where you had no default package selected:
.Sp
.Vb 8
\&    ppm:1:1> search Text
\&    1. Convert-Context  [0.501]     an Attributed Text data type
\&    2. gettext          [1.01]      message handling functions
\&    3. HTML-FromText    [1.005]     mark up text as HTML
\&    4. HTML-Subtext     [1.03]      Perform text substitutions on an HTML
\&                                    template
\&    5. Locale-Maketext  [0.18]      framework for software localization
\&    ppm:1:1:s1>
.Ve
.Sp
\&...and you describe 'Locale\-Maketext', you will see this:
.Sp
.Vb 14
\&    ppm:1:1:s1> describe Locale-Maketext
\&    ====================
\&        Name: Locale-Maketext
\&     Version: 0.18
\&      Author: Sean M. Burke (sburke@cpan.org)
\&    Abstract: framework for software localization
\&    Prerequisites:
\&           1. I18N-LangTags 0.13
\&    Implementations:
\&           1. i686-linux-thread-multi
\&           2. MSWin32-x86-multi-thread
\&           3. sun4-solaris-thread-multi
\&    ====================
\&    ppm:1:1:s1:sp5>
.Ve
.Sp
Notice that the correct package got selected, even though you specified it
by name.
.PP
This behaviour also applies to the query and properties commands.
.Sh "See Also"
.IX Subsection "See Also"
describe, properties, query, search
.SH "quickstart \*(-- a beginners' guide to PPM3"
.IX Header "quickstart  a beginners' guide to PPM3"
.Sh "Description"
.IX Subsection "Description"
\&\s-1PPM\s0 (Programmer's Package Manager) is a utility for managing
software \*(L"packages\*(R". A package is a modular extension for a language
or a software program. Packages reside in  repositories. \s-1PPM\s0 can use 
three types of repositories:
.PP
.Vb 3
\& 1) A directory on a CD-ROM or hard drive in your computer
\& 2) A website
\& 3) A remote Repository Server (such as ASPN)
.Ve
.PP
Common Commands:
.PP
To view \s-1PPM\s0 help:
.PP
.Vb 2
\&  help
\&  help <command>
.Ve
.PP
To view the name of the current repository:
.PP
.Vb 1
\&  repository
.Ve
.PP
To search the current repository:
.PP
.Vb 1
\&  search <keywords>
.Ve
.PP
To install a package:
.PP
.Vb 1
\&  install <package_name>
.Ve
.PP
Most commands can be truncated; as long as the command is unambiguous,
\&\s-1PPM\s0 will recognize it.  For example, 'repository add foo' can be
entered as 'rep add foo'.
.PP
\&\s-1PPM\s0 features user profiles, which store information about installed
packages. Profiles are stored as part of your \s-1ASPN\s0 account; thus,
you can easily maintain package profiles for different languages, or
configure one machine with your favorite packages, and then copy that
installation to another machine by accessing your \s-1ASPN\s0 profile.  
.PP
For more information, type 'help profile' at the \s-1PPM\s0 prompt.
.SH "unicode \*(-- Notes About Unicode Author Names"
.IX Header "unicode  Notes About Unicode Author Names"
.Sh "Description"
.IX Subsection "Description"
\&\s-1CPAN\s0 author names are defined to be in Unicode. Unicode is an international
standard \s-1ISO\s0 10646, defining the \fIUniversal Character Set (\s-1UCS\s0)\fR. \s-1UCS\s0
contains all characters of all other character set standards. For more
information about Unicode, see \fIhttp://www.unicode.org/\fR.
.PP
The \s-1CPAN\s0 authors website is located at your local \s-1CPAN\s0 mirror under
/authors/00whois.html. For example, you can view it at
\&\fIhttp://www.cpan.org/authors/00whois.html\fR. This page can be rendered by
Mozilla 0.9.8 and Internet Explorer 5.0, but you may have to install extra
language packs to view all the author names.
.PP
By default, \s-1PPM3\s0 renders all characters as Latin1 when it prints them to your
console. Characters outside the Latin1 range (0\-255) are not printed at all.
.PP
If your console can render \s-1UTF\-8\s0 characters, you can tell \s-1PPM3\s0 not to recode
characters by using one of the following environment variables:
.IP "\(bu" 4
\&\s-1LC_ALL\s0
.IP "\(bu" 4
\&\s-1LC_CTYPE\s0
.IP "\(bu" 4
\&\s-1LANG\s0
.IP "\(bu" 4
\&\s-1PPM_LANG\s0
.PP
\&\s-1PPM3\s0 requires one of these environment variables to contain the string
\&'\s-1UTF\-8\s0'. For example, the following setting make \s-1PPM3\s0 print
beautifully-formatted authors in RedHat Linux 7.2 (assumes you're using a
Bourne shell):
.PP
.Vb 1
\&  $ PPM_LANG='en_US.UTF-8' xterm -u8 -e ppm3
.Ve
.PP
Linux and Solaris users should refer to xterm for more information about
setting up xterm to display \s-1UTF\-8\s0 characters.
.SH "BUGS"
.IX Header "BUGS"
If you find a bug in \s-1PPM\s0, please report it at this \s-1URL:\s0
.PP
.Vb 1
\&  http://bugs.activestate.com/enter_bug.cgi?set_product=PPM
.Ve
.PP
Bugs regarding the ActiveState Package Repository (particularly missing or
out-of-date packages) should be sent via email to this email address:
.PP
.Vb 1
\&  mailto:ppm-request@ActiveState.com
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
For information about the older version of \s-1PPM\s0, see ppm.
.SH "AUTHOR"
.IX Header "AUTHOR"
ActiveState Corporation (support@ActiveState.com)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2001, 2002, ActiveState Corporation. All Rights Reserved.
