.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.3
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Animation 3"
.TH Animation 3 "2004-02-28" "perl v5.8.7" "User Contributed Perl Documentation"
.SH "NAME"
Tk::Animation \- Display sequence of Tk::Photo images
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use Tk::Animation
\&  my $img = $widget->Animation('-format' => 'gif', -file => 'somefile.gif');
.Ve
.PP
.Vb 1
\&  $img->add_frame(@images);
.Ve
.PP
.Vb 1
\&  $img->start_animation( $period );
.Ve
.PP
.Vb 3
\&  $img->next_image;
\&  $img->prev_image;
\&  $img->set_image( 0 .. $#frames );
.Ve
.PP
.Vb 2
\&  $img->pause_animation;
\&  $img->resume_animation( $period );
.Ve
.PP
.Vb 2
\&  $img->fast_forward( $multiplier );
\&  $img->fast_reverse( $multiplier );
.Ve
.PP
.Vb 1
\&  $img->stop_animation;
.Ve
.PP
.Vb 1
\&  $img->blank( $boolean );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
In the simple case when \f(CW\*(C`Animation\*(C'\fR is passed a \s-1GIF89\s0 style \s-1GIF\s0 with
multiple 'frames', it will build an internal array of \f(CW\*(C`Photo\*(C'\fR images.
.PP
The \f(CW\*(C`add_frame\*(C'\fR method adds images to the sequence. It is provided
to allow animations to be constructed from separate images.
All images must be \f(CW\*(C`Photo\*(C'\fRs and should all be the same size.
.PP
\&\f(CW\*(C`start_animation($period)\*(C'\fR then initiates a \f(CW\*(C`repeat\*(C'\fR with specified
\&\fI$period\fR to sequence through these images. As for raw \f(CW\*(C`repeat\*(C'\fR
\&\fI$period\fR is in milliseconds, for a 50Hz monitor it should be at
least 20mS. If \f(CW$period\fR is omitted it defaults to 100 milliseconds.
.PP
\&\f(CW\*(C`stop_animation\*(C'\fR cancels the \f(CW\*(C`repeat\*(C'\fR and resets the image to the first
image in the sequence.
.PP
For fine-grained control \f(CW\*(C`next_image\*(C'\fR and \f(CW\*(C`prev_image\*(C'\fR move one frame forward
or backward.  \f(CW\*(C`set_image\*(C'\fR randomly positions the animation to a particular frame.
.PP
\&\f(CW\*(C`pause_animation\*(C'\fR pauses the movie and \f(CW\*(C`resume_animation\*(C'\fR continues from the
pause point.
.PP
\&\f(CW\*(C`fast_forward\*(C'\fR and \f(CW\*(C`fast_reverse\*(C'\fR speed through the movie either
forwards or backwards.  \f(CW$multiplier\fR specifies how much faster the
animation moves.
.PP
By default Animation leaves the previous movie frame in the animation
photo.  Many times overlaying subsequent frames produces a composite
that looks blurred.  The \f(CW\*(C`blank\*(C'\fR method is used to blank the
animation photo before displaying new frames.  The default is 0 for
backward compatibility.
.SH "BUGS"
.IX Header "BUGS"
The 'period' should probably be a property of the Animation object
rather than specified at 'start' time. It may even be embedded
in the \s-1GIF\s0.
