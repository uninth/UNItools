#!/bin/sh
#
# $Header: /lan/ssi/shared/software/internal/UNItools/src/GaIA/pkgs/setup/setup-1.0/RCS/ipropr,v 1.2 2015/06/25 14:40:44 root Exp $
#

################################################################################
#
# Main
#
################################################################################

NOW=`/bin/date`
FQDN=`hostname`

case `domainname` in
	"")	FQDN=`hostname`
	;;
	*)	FQDN=`hostname`.`domainname`
	;;
esac

BASEPATH=/var/opt/UNIfw1doc
ETCDIR=${BASEPATH}/etc
HTMLHEAD=${ETCDIR}/htmlhead.txt

ETH=`ifconfig -a| sed '
	/^[ 	]/d;
	s/[ 	].*//
	 /^$/d
	/^lo/d
	'`

BG=0

TITLE="IP and Network Configuration"

cat $HTMLHEAD | sed "s/_TITLE_/$TITLE/g"
cat << EOH
<BODY>
<TABLE FRAME="VOID" CELLSPACING="1" COLS="1" RULES="NONE" BORDER="1"><TBODY><TR><TD>
<H1>$TITLE</H1>
<P>Data collected: $NOW<br>
hostname: ${FQDN}</br>
</P>
<div class="unistyle">
<table>
<thead><tr>
<th>Interface</th>
<th>Network/Prefix</th>
<th>Gateway</th>
<th>Link</th>
<th>Speed</th>
<th>Duplex</th>
</tr></thead>
<tbody>
EOH

for E in $ETH
do

	ifconfig $E | sed "/inet/!d; /inet6/d; s/.*addr://; s/[ 	].*ask:/	/ " | while read NET MASK
	do

		# eth2.xxx -> eth2
		REAL_E=`echo $E |sed 's/\..*//'`
 
		LINK=`ethtool $REAL_E	| sed '/Link/!d; s/ detected//; s/^[ \t]*//;s/[ \t]*$//'`
		SPEED=`ethtool $REAL_E	| sed '/Speed/!d; s/\!.*$//; s/^[ \t]*//;s/[ \t]*$//'`
		DUPLEX=`ethtool $REAL_E	| sed '/Duplex/!d; s/\!.*$//; s/^[ \t]*//;s/[ \t]*$//'`

		PREFIX=`ipcalc -p  $NET $MASK | sed 's/.*=//'`
		#printf "| %10s | %16s/%s | %20s | %20s | %20s | %20s |\n" "${E}" "${NET}" "${PREFIX}" "n/a" "${LINK:="n/a"}" "${SPEED:="n/a"}" "${DUPLEX:="n/a"}"
		echo "${E};${NET}/${PREFIX};n/a;${LINK:="n/a"};${SPEED:="n/a"};${DUPLEX:="n/a"}"

		netstat -rn | grep $E | awk  '
			#$0 ~ /0.0.0.0/	{ next }
					{ print $1 " " $3 " " $2 }
					' | while read N M GW
					do
						P=`ipcalc -p $N $M | sed 's/.*=//'`
						if [ "$GW" = "0.0.0.0" ]; then
							: ignore kernel route
						else
							# printf "| %10s | %17s/%s | %20s | %20s | %20s | %20s |\n" "route" "${N}" "${P}" "${GW}" "n/a" "n/a" "n/a"
							echo "route;${N}/${P};${GW};n/a;n/a;n/a"
						fi

					done
	done
done | gawk -F';' '
	{
		if (ALT == 0)
		{
			print "<tr>"
			print "<td>" $1 "</a>"
			print "<td>" $2 "</a>"
			print "<td>" $3 "</a>"
			print "<td>" $4 "</a>"
			print "<td>" $5 "</a>"
			print "<td>" $6 "</a>"
			print "</td>"
			ALT = 1
			next
		}
		else
		{
			print "<tr class=\"alt\">"
			print "<td>" $1 "</a>"
			print "<td>" $2 "</a>"
			print "<td>" $3 "</a>"
			print "<td>" $4 "</a>"
			print "<td>" $5 "</a>"
			print "<td>" $6 "</a>"
			print "</td>"
			print "</td>"
			ALT = 0
			next
		}
	}
'


cat << EOF
</tbody>
</table>
</div>
<H1>General information</H1>
Please notice
<ul>
<li>The information is made by a program. Programs have errors, so will this report. No-one checked it</br>
<li>This is not a full documentation of your Check Point firewall configuration. All the interesting blades are missing. Blame Check Point</br>
<li>The route tables does not cover IPv6, TAP and TUN interfaces</br>
</ul>
<DIV CLASS="copyright"><BR></DIV>
</body>
</html>
EOF
